// Mocks generated by Mockito 5.0.15 from annotations
// in messenger_app/test/viewmodels/chats_view_model_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:messenger_app/data/datasource/datasource_contract.dart' as _i3;
import 'package:messenger_app/models/chat.dart' as _i5;
import 'package:messenger_app/models/local_message.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:service/chat.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

// ignore: camel_case_types
class _FakeMessage_0 extends _i1.Fake implements _i2.Message {}

/// A class which mocks [IDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIDatasource extends _i1.Mock implements _i3.IDatasource {
  MockIDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> addChat(_i5.Chat? chat) =>
      (super.noSuchMethod(Invocation.method(#addChat, [chat]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> addMessage(_i6.LocalMessage? message) =>
      (super.noSuchMethod(Invocation.method(#addMessage, [message]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i5.Chat?> findChat(String? chatId) =>
      (super.noSuchMethod(Invocation.method(#findChat, [chatId]),
          returnValue: Future<_i5.Chat?>.value()) as _i4.Future<_i5.Chat?>);
  @override
  _i4.Future<List<_i5.Chat>> findAllChats() =>
      (super.noSuchMethod(Invocation.method(#findAllChats, []),
              returnValue: Future<List<_i5.Chat>>.value(<_i5.Chat>[]))
          as _i4.Future<List<_i5.Chat>>);
  @override
  _i4.Future<void> updateMessage(_i6.LocalMessage? message) =>
      (super.noSuchMethod(Invocation.method(#updateMessage, [message]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<List<_i6.LocalMessage>> findMessages(String? chatId) =>
      (super.noSuchMethod(Invocation.method(#findMessages, [chatId]),
              returnValue:
                  Future<List<_i6.LocalMessage>>.value(<_i6.LocalMessage>[]))
          as _i4.Future<List<_i6.LocalMessage>>);
  @override
  _i4.Future<void> deleteChat(String? chatId) =>
      (super.noSuchMethod(Invocation.method(#deleteChat, [chatId]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [Chat].
///
/// See the documentation for Mockito's code generation for more information.
class MockChat extends _i1.Mock implements _i5.Chat {
  MockChat() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: '') as String);
  @override
  List<_i6.LocalMessage> get messages =>
      (super.noSuchMethod(Invocation.getter(#messages),
          returnValue: <_i6.LocalMessage>[]) as List<_i6.LocalMessage>);
  @override
  set from(_i2.User? _from) =>
      super.noSuchMethod(Invocation.setter(#from, _from),
          returnValueForMissingStub: null);
  @override
  int get unread =>
      (super.noSuchMethod(Invocation.getter(#unread), returnValue: 0) as int);
  @override
  set unread(int? _unread) =>
      super.noSuchMethod(Invocation.setter(#unread, _unread),
          returnValueForMissingStub: null);
  @override
  set mostRecent(_i6.LocalMessage? _mostRecent) =>
      super.noSuchMethod(Invocation.setter(#mostRecent, _mostRecent),
          returnValueForMissingStub: null);
  @override
  Map<String, dynamic> toMap() =>
      (super.noSuchMethod(Invocation.method(#toMap, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [LocalMessage].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalMessage extends _i1.Mock implements _i6.LocalMessage {
  MockLocalMessage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get chatId =>
      (super.noSuchMethod(Invocation.getter(#chatId), returnValue: '')
          as String);
  @override
  _i2.Message get message => (super.noSuchMethod(Invocation.getter(#message),
      returnValue: _FakeMessage_0()) as _i2.Message);
  @override
  _i2.ReceiptStatus get receipt =>
      (super.noSuchMethod(Invocation.getter(#receipt),
          returnValue: _i2.ReceiptStatus.sent) as _i2.ReceiptStatus);
  @override
  String get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: '') as String);
  @override
  Map<String, dynamic> toMap() =>
      (super.noSuchMethod(Invocation.method(#toMap, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
  @override
  String toString() => super.toString();
}
